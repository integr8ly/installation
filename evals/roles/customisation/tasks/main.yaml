- name: Retrieve 3Scale admin auth token
  shell: oc describe dc/system-app -n 3scale | grep ADMIN_ACCESS_TOKEN | tail -1 | awk '{print $2}'
  register: admin_auth_config
- set_fact:
    threescale_admin_token: "{{ admin_auth_config.stdout }}"  

- name: Retrieve 3Scale master auth token
  shell:  oc describe dc/system-app -n 3scale | grep MASTER_ACCESS_TOKEN | head -1 | awk -F '"' '{print $2}'
  register: master_auth_config        
 
- set_fact:
    threescale_master_token: "{{master_auth_config.stdout}}"      

- name: Get Che secure route
  shell: oc get route/che -o template --template \{\{.spec.host\}\} -n {{ che_namespace }}
  register: che_secure_route

- set_fact: 
    che_secure_route: "{{che_secure_route.stdout}}"

- name: Get RH-SSO secure route
  shell: oc get route/sso -o template --template \{\{.spec.host\}\} -n {{ rhsso_namespace }}
  register: rhsso_secure_route

- set_fact: 
    rhsso_secure_route: "{{rhsso_secure_route.stdout}}"

- name: Get Gitea route
  shell: oc get routes -n {{ gitea_namespace }} -o=jsonpath={.items[0].spec.host} 
  register: gitea_route

- set_fact: 
    gitea_route: "{{gitea_route.stdout}}"    

- name: Get Integreatly WebApp route
  shell: oc get route/tutorial-web-app -o template --template \{\{.spec.host\}\} -n {{ webapp_namespace }}
  register: webapp_route

- set_fact: 
    webapp_route: "{{webapp_route.stdout}}"        


- name: Get threescale admin  route
  shell: oc get route/system-master-admin-route -o template --template \{\{.spec.host\}\} -n {{ threescale_namespace }}
  register: threescale_system_admin_route

- set_fact: 
    threescale_system_admin_route: "{{threescale_system_admin_route.stdout}}"    

- name: Get launcher  route
  shell: oc get route/launcher -o template --template \{\{.spec.host\}\} -n {{ launcher_namespace }}
  register: launcher_route_cmd

- set_fact: 
    launcher_route: "{{launcher_route_cmd.stdout}}"    

- name: Get che  route
  shell: oc get route/che -o template --template \{\{.spec.host\}\} -n {{ che_namespace }}
  register: che_route_cmd

- set_fact: 
    che_route: "{{che_route_cmd.stdout}}"        

- name: Get enmasse rest  route
  shell: oc get route/restapi -o template --template \{\{.spec.host\}\} -n {{ enmasse_namespace }}
  register: enmsase_route_cmd

- set_fact: 
    enmasse_rest_route: "{{enmsase_route_cmd.stdout}}"            

- name: Retrieve launcher sso hostvars
  shell: "oc get route/{{launcher_sso_prefix}} -o jsonpath='{.spec.host}' -n {{ launcher_namespace }}"
  register: launcher_sso_host_cmd

- set_fact: 
    launcher_sso_route: "{{launcher_sso_host_cmd.stdout}}"          



- name: Generate custom inventory
  template:
    src: "inventory.j2"
    dest: /tmp/generated_inventory

- name: Check if secret exists    
  shell: oc get secret manifest -n {{webapp_namespace}}
  register: inventory_secret
  failed_when: inventory_secret.stderr != '' and 'NotFound' not in inventory_secret.stderr

- name: Delete secret if it exists
  shell: oc delete secret manifest -n {{webapp_namespace}}
  when:   inventory_secret.stderr == ""

- name: Create secret with custom inventory
  shell: oc create secret generic manifest --from-file=/tmp/generated_inventory --type=ansible/inventory -n {{webapp_namespace}}

- name: remove generated template
  file: path='/tmp/generated_inventory' state=absent