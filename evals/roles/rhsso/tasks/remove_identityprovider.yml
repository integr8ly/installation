---
-
  name: Check master-config has been modified by the installer
  shell: "cat {{ rhsso_openshift_master_config_path }} | grep 'GENERATED BY SSO INSTALLER' | wc -l"
  become: yes
  register: output

-
  name: "rewrite master config and restart API"
  when: output.stdout != "0"
  block:
    -
      name: Remove identity providers from master config
      shell: "sed -i.bak '/identityProviders/,/masterCA/{//!d}' {{ rhsso_openshift_master_config_path }}"
      args:
        warn: no
      when: rhsso_hide_default_identity_providers
      become: yes
    -
      name: Read master-config to check
      command: cat "{{ rhsso_openshift_master_config_path }}"
      become: yes
      register: master_config_raw
    -
      name: Read original identity provider config
      shell: "cat {{ original_identity_provider_path }}"
      become: yes
      register: original_identity_provider_config
    -
      name: Add original identity provider config to master config
      blockinfile:
        marker: "# {mark} GENERATED BY SSO UNINSTALLER"
        path: "{{ rhsso_openshift_master_config_path }}"
        insertafter: "identityProviders"
        backup: yes
        block: "{{ original_identity_provider_config.stdout }}"
      register: sso_master_config_update
      become: yes
      when: '"GENERATED BY SSO UNINSTALLER" not in master_config_raw.stdout'
    -
      name: Restart master api
      become: yes
      shell: /usr/local/bin/master-restart api
    -
      name: Restart master controllers
      become: yes
      shell: /usr/local/bin/master-restart controllers

# Delete users and identities created by rhsso
-
  name: "Get all users created by rhsso"
  shell: oc get users | grep 'rh_sso' | awk '{print $1}'
  register: users
  failed_when: false

-
  name: "Delete users"
  shell:  "oc delete users {{ users.stdout | replace('\n', ' ') }}"
  when: users.stdout != ''
  failed_when: false