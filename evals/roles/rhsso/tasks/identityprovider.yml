---
- name: Find encrypted RH-SSO route
  shell: for route in $(oc get routes -n {{ rhsso_namespace}} | awk '{print $1}' | grep -v 'NAME'); do term=$(oc get route $route -n {{ rhsso_namespace }} -o template --template \{\{.spec.tls.termination\}\}); if [ "$term" == "edge" ] || [ "$term" == "reencrypt" ]; then echo $route; break; fi; done
  register: rhsso_secure_route_name
  failed_when: rhsso_secure_route_name.stdout == ''

- name: Get RH-SSO secure route
  local_action: command oc get route/{{ rhsso_secure_route_name.stdout }} -o template --template \{\{.spec.host\}\} -n {{ rhsso_namespace }}
  register: rhsso_secure_route

- set_fact:
    rhsso_route: "{{ rhsso_secure_route.stdout }}"

## all of this is to get the client secret out of the openshift secret it is stored in, where it might be "null"
- name: Retrieve RH-SSO raw client-secret
  shell: oc get secret {{ rhsso_client_id }}-client -n {{ rhsso_namespace }} -o json | grep "\"secret\"" | cut -f2 -d ":" | tr -d ' '
  register: client_secret_raw

#set to empty when value is null
- set_fact:
    client_secret: ""
  when: client_secret_raw.stdout == "null"

- name: decode client secret
  shell: echo {{ client_secret_raw.stdout }} | cut -f2 -d '"'
  register: client_secret_decoded_raw
  when: client_secret_raw.stdout != "null"

- set_fact:
    client_secret: "{{ client_secret_decoded_raw.stdout | b64decode }}"
  when: client_secret_raw.stdout != "null"
## finished getting client secret from openshift secret now

- name: Save original identity provider config
  shell: "sed -n '/identityProvider/,/masterCA/{//!p}' {{ rhsso_openshift_master_config_path }} | awk '!/GENERATED BY SSO/' > {{ original_identity_provider_path }}"
  args:
    warn: no
  when: rhsso_hide_default_identity_providers
  become: yes

- name: Hide existing identity providers from login screen
  lineinfile:
    path: "{{ eval_openshift_master_config_path }}"
    state: present
    regexp: '^(.*)login: true$'
    line: '\1login: false'
    backrefs: yes
  when: rhsso_hide_default_identity_providers
  become: true

- set_fact:
    rhsso_identity_provider_ca_cert_path: ""
  when: not (eval_self_signed_certs | bool)

- name: Add RH-SSO identity provider to master config
  blockinfile:
    marker: "# {mark} GENERATED BY SSO INSTALLER"
    path: "{{ rhsso_openshift_master_config_path }}"
    insertafter: "identityProviders"
    backup: yes
    block: |2
        - name: rh_sso
          challenge: true
          login: true
          mappingInfo: add
          provider:
            apiVersion: v1
            kind: OpenIDIdentityProvider
            clientID: {{ rhsso_client_id }}
            clientSecret: {{ client_secret }}
            ca: {{ rhsso_identity_provider_ca_cert_path }}
            urls:
              authorize: https://{{ rhsso_route }}/auth/realms/{{ rhsso_realm }}/protocol/openid-connect/auth
              token: https://{{ rhsso_route }}/auth/realms/{{ rhsso_realm }}/protocol/openid-connect/token
              userInfo: https://{{ rhsso_route }}/auth/realms/{{ rhsso_realm }}/protocol/openid-connect/userinfo
            claims:
              id:
              - sub
              preferredUsername:
               - preferred_username
              name:
              - name
              email:
              - email
  register: sso_master_config_update
  become: yes

- name: restart openshift master services
  shell: "{{ rhsso_master_restart_shim_path }} {{ item }}"
  become: yes
  when: sso_master_config_update.changed
  with_items:
  - api
  - controllers
