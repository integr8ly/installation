---
- hosts: master
  gather_facts: no
  tasks:
    - block:
      -
        name: Retrieve master configurations
        slurp:
          src: "{{ eval_openshift_master_config_path }}"
        register: eval_master_config
        become: yes
      -
        add_host:
          name: EVAL_VARS
          eval_app_host: "{{ (eval_master_config['content'] | b64decode | from_yaml)['routingConfig']['subdomain'] }}"
          openshift_master_url: "{{ (eval_master_config['content'] | b64decode | from_yaml)['masterPublicURL'] }}"
      tags: ['bootstrap', 'remote']
        
- hosts: localhost
  gather_facts: true
  tasks:
    - name: Install Nexus
      include_role:
        name: nexus
        tasks_from: install
      tags: ['nexus']
    - 
      name: Install rhsso
      include_role:
        name: rhsso
      vars:
        rhsso_redirect_uri: "{{ hostvars['EVAL_VARS']['openshift_master_url'] }}"
        apps_redirect_uri: "{{ hostvars['EVAL_VARS']['eval_app_host'] }}"
      tags: ['rhsso']
    -
      name: Gather rhsso data
      block: 
        -
          # Setting Openshift SSO env vars e.g.
          # - eval_rhsso_admin_username
          # - eval_rhsso_admin_password
          name: Retrieve rhsso env vars
          shell: "oc get dc/sso \
                  -o jsonpath='{.spec.template.spec.containers[0].env[?(@.name==\"{{ item }}\")].value}' \
                  -n {{ eval_rhsso_namespace }}"
          with_items:
            - 'SSO_SERVICE_USERNAME'
            - 'SSO_SERVICE_PASSWORD'
            - 'SSO_ADMIN_USERNAME'
            - 'SSO_ADMIN_PASSWORD'
          register: _eval_rhsso_dc_cmd
        -
          name: Set rhsso playbook vars
          set_fact: "eval_rh{{ item.item | lower }}={{ item.stdout }}"
          with_items: "{{ _eval_rhsso_dc_cmd.results }}"
        -
          name: Retrieve cluster rhsso host
          shell: "oc get route/sso -o jsonpath='{.spec.host}' -n {{ eval_rhsso_namespace }}"
          register: eval_sso_host_cmd
        -
          name: Set rhsso host var
          set_fact:
            eval_rhsso_host: "{{ eval_sso_host_cmd.stdout }}"
      tags: ['bootstrap']
    -
      name: Set eval_app_host var
      set_fact:
        eval_app_host: "{{ hostvars['EVAL_VARS']['eval_app_host'] }}"
    -
      name: Install launcher
      include_role:
        name: launcher
      vars:
        launcher_openshift_sso_username: "{{ eval_rhsso_admin_username }}"
        launcher_openshift_sso_password: "{{ eval_rhsso_admin_password }}"
        launcher_openshift_sso_route: "{{ eval_rhsso_host }}"
        launcher_sso_validate_certs: "{{ eval_sso_validate_certs }}"
        openshift_master_url: "{{ hostvars['EVAL_VARS']['openshift_master_url'] }}"
      tags: ['launcher']
    -
      name: Retrieve launcher sso env vars
      shell: "oc get dc/launcher-sso \
        -o jsonpath='{.spec.template.spec.containers[0].env[?(@.name==\"{{ item }}\")].value}' \
        -n {{ eval_launcher_namespace }}"
      with_items:
        - 'SSO_SERVICE_USERNAME'
        - 'SSO_SERVICE_PASSWORD'
        - 'SSO_ADMIN_USERNAME'
        - 'SSO_ADMIN_PASSWORD'
      register: _eval_launcher_sso_dc_cmd
      tags: ['bootstrap']
    -
      name: Set launcher sso playbook vars
      set_fact: "eval_launcher_{{ item.item | lower }}={{ item.stdout }}"
      with_items: "{{ _eval_launcher_sso_dc_cmd.results }}"
      tags: ['bootstrap']
    -
      name: Retrieve launcher sso hostvars
      shell: "oc get route/launcher-sso -o jsonpath='{.spec.host}' -n {{ eval_launcher_namespace }}"
      register: eval_launcher_sso_host_cmd
      tags: ['bootstrap']
    -
      name: Set launcher sso host var
      set_fact:
        eval_launcher_sso_host: "{{ eval_launcher_sso_host_cmd.stdout }}"
      tags: ['bootstrap']
    - 
      name: Install che
      include_role:
        name: che
      vars:
        che_keycloak_user: "{{ eval_launcher_sso_admin_username }}"
        che_keycloak_password: "{{ eval_launcher_sso_admin_password }}"
        che_keycloak_host: "{{ eval_launcher_sso_host }}"
        che_route_suffix: "{{ eval_app_host }}"
        che_protocol: https
        che_ws_protocol: wss
        che_keycloak_realm: "{{ eval_launcher_sso_realm }}"
        che_keycloak_client_id: che-client
      tags: ['che']
      when: eval_action == 'install'
    - 
      name: Uninstall che
      include_role:
        name: che
        tasks_from: uninstall
      vars:
        che_keycloak_user: "{{ eval_launcher_sso_admin_username }}"
        che_keycloak_password: "{{ eval_launcher_sso_admin_password }}"
        che_keycloak_host: "{{ eval_launcher_sso_host }}"
      tags: ['che']
      when: eval_action == 'uninstall'
    -
      name: Install 3Scale
      include_role:
        name: 3scale
      vars:
        threescale_route_suffix: "{{ eval_app_host }}"
      tags: ['3scale']
    -
      name: Install webapp
      include_role:
        name: webapp
      vars:
        openshift_master_url: "{{ hostvars['EVAL_VARS']['openshift_master_url'] }}"
      tags: ['webapp']
      when: eval_action == 'install'
    - 
      name: Install Gitea
      include_role:
        name: gitea
      vars:
        gitea_route_suffix: "{{ eval_app_host }}"
      tags: ['gitea']
    - 
      name: Install managed services broker
      include_role:
        name: msbroker
      vars:
        route_suffix: "{{ eval_app_host }}"
        launcher_namespace: "{{ eval_launcher_namespace }}"
        che_namespace: "{{ eval_che_namespace }}"
        threescale_namespace: "{{ eval_threescale_namespace }}"
      tags: ['msbroker']
    -
      name: Link enmasse resources folder
      file:
        src: "{{ playbook_dir }}/../artifacts/enmasse/resources"
        dest: "{{ playbook_dir }}/resources"
        state: link
      tags: ['enmasse']
    -
      name: Install enmasse
      include_role:
        name: enmasse
      vars:
        namespace: "{{ enmasse_namespace }}"
        multitenant: "{{ enmasse_multitenant }}"
        enable_rbac: "{{ enmasse_enable_rbac }}"
        service_catalog: "{{ enmasse_service_catalog }}"
        keycloak_admin_password: "{{ eval_rhsso_admin_password }}"
        authentication_services: "{{ enmasse_authentication_services }}"
      when: enmasse_deploy_infra | default('true') | bool
      tags: ['enmasse']
    -
      name: Unlink enmasse resources folder
      file:
        path: "{{ playbook_dir }}/resources"
        state: absent
      tags: ['enmasse']
    -
      name: Configure SSO Logout URL
      include_role:
        name: rhsso
        tasks_from: logout
      vars:
        rhsso_redirect_uri: "{{ hostvars['EVAL_VARS']['openshift_master_url'] }}"
      tags: ['rhsso']

- hosts: localhost
  tasks:
    - name: Setup AMQ Templates
      include_role:
        name: amq
      tags: ['amq']
    - name: Install walkthrough 1
      include_role:
        name: walkthroughs
        tasks_from: walkthrough_1
    - name: Reboot template broker
      include_role:
        name: reboot_template_broker
    - 
      name: Setup Fuse on OpenShift
      include_role:
        name: fuse
      tags: ['fuse']

- hosts: master
  gather_facts: no
  tasks:
    - include_role:
        name: webapp
        tasks_from: cors
      tags: ['webapp', 'remote']
    - include_role:
        name: rhsso
        tasks_from: identityprovider
      vars:
        rhsso_openshift_master_config_path: "{{ eval_openshift_master_config_path }}"
      tags: ['rhsso', 'remote']

- hosts: localhost
  gather_facts: no
  tasks:
    - debug:
        msg: All services have been provisioned successfully. Please add '{{ callback_url }}' as the Authorization callback URL of your GitHub OAuth Application.
      vars:
        callback_url: https://{{ launcher_sso_route }}/auth/realms/{{ eval_launcher_sso_realm }}/broker/github/endpoint

