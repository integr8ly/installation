---
- name: Get RH-SSO secure route
  shell: oc get route/sso -o template --template \{\{.spec.host\}\} -n {{ threescale_sso_namespace }}
  register: sso_secure_route

## all of this is to get the client secret out of the openshift secret it is stored in, where it might be "null"
- name: Retrieve RH-SSO raw client-secret
  shell: oc get secret {{ threescale_namespace }}-client -n {{ threescale_sso_namespace }} -o json | grep "\"secret\"" | cut -f2 -d ":" | tr -d ' '
  register: client_secret_raw

#set to empty when value is null
- set_fact:
    client_secret: ""
  when: client_secret_raw.stdout == "null"

- name: decode client secret
  shell: echo {{ client_secret_raw.stdout }} | cut -f2 -d '"'
  register: client_secret_decoded_raw
  when: client_secret_raw.stdout != "null"

- set_fact:
    client_secret: "{{ client_secret_decoded_raw.stdout | b64decode }}"
  when: client_secret_raw.stdout != "null"
## finished getting client secret from openshift secret now

- set_fact:
    threescale_sso_client_secret: "{{ client_secret }}"
    threescale_sso_site: "https://{{ sso_secure_route.stdout }}/auth/realms/{{ threescale_sso_realm }}"

- import_tasks: admin_token.yml

- name: Create 3Scale SSO provider
  uri:
    url: "https://{{ threescale_admin_route }}/admin/api/account/authentication_providers.xml"
    method: POST
    body: "access_token={{ threescale_admin_token }}&kind=keycloak&name=rhsso&client_id={{ threescale_sso_client_id }}&client_secret={{ threescale_sso_client_secret }}&site=https%3A%2F%2F{{ sso_secure_route.stdout }}%2Fauth%2Frealms%2F{{ threescale_sso_realm }}&skip_ssl_certificate_verification=true&published=true"
    validate_certs: "{{ threescale_sso_validate_certs }}"
    status_code: [201, 422]
