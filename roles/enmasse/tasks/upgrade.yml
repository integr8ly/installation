---
- include_tasks: "_download_enmasse_artifact.yml"

- include_tasks: "_install_enmasse_from_artifact.yml"

- name: Generate AuthenticationService
  template:
    src: authenticationservice.yml.j2
    dest: "/tmp/authenticationservice.yml"

- name: Generate keycloak admin password
  set_fact:
    keycloak_admin_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"

- name: Create secret with the keycloak credentials
  shell: oc create secret generic -n {{ enmasse_namespace }} keycloak-credentials --from-literal=admin.username=admin --from-literal=admin.password={{ keycloak_admin_password }}
  register: secret_exists
  failed_when: secret_exists.stderr != '' and 'AlreadyExists' not in secret_exists.stderr

- name: Label secret
  shell: oc label secret keycloak-credentials -n {{ enmasse_namespace }} app=enmasse
  when: secret_exists.rc == 0

- name: "Create EnMasse AuthenticationService"
  shell: oc create -f /tmp/authenticationservice.yml
  register: authenticationservice_exists
  failed_when: authenticationservice_exists.stderr != '' and 'AlreadyExists' not in authenticationservice_exists.stderr

- name: "Verify EnMasse deployment succeeded"
  shell: sleep 5; oc get pods --namespace {{ enmasse_namespace }}  |  grep  "deploy"
  register: result
  until: not result.stdout
  retries: 50
  delay: 10
  failed_when: result.stdout
  changed_when: False

- name: "delete old AMQ Online Shared Services projects"
  shell: |
    for ns in $(oc get namespaces | grep "shared" | awk '{print $1}'); do
      amq_here=$(oc get serviceinstances -n ${ns} | grep amq-online | wc -l);
      if [ "${amq_here}" != "0" ]; then
        oc delete namespace ${ns};
      fi
    done

- name: "wait for qdrouterd pods to be removed"
  shell: sleep 30; oc get statefulsets -n {{ enmasse_namespace }} | grep qdrouterd | wc -l
  register: wait_for_qdrouterd
  retries: 60
  until: wait_for_qdrouterd.stdout == "0"
