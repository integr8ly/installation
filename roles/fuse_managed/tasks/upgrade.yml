---
# Used to pull images from registry.redhat.io
- name: Expose vars
  include_vars: "{{ role_path }}/../imagestream_pull_secret/defaults/main.yml"

- include_role:
    name: imagestream_pull_secret
  vars:
    namespace: "{{ fuse_namespace }}"
    product_ns_pull_secret_name: "{{ fuse_pull_secret_name }}"

- name: Get existing Grafana dashboards
  shell: oc get grafanadashboards -o name -n {{ fuse_namespace }}
  register: existing_grafana_dashboards_cmd

- name: Delete existing Grafana dashboards
  shell: "oc delete {{ item }} -n {{ fuse_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ existing_grafana_dashboards_cmd.stdout_lines }}"

- name: Get existing service monitors
  shell: oc get servicemonitor -o name -n {{ fuse_namespace }}
  register: existing_service_monitor

- name: Delete existing service monitor
  shell: "oc delete {{ item }} -n {{ fuse_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ existing_service_monitor.stdout_lines }}"

- name: Get existing prometheus rules
  shell: oc get prometheusrules -o name -n {{ fuse_namespace }}
  register: existing_prometheus_rules

- name: Delete existing prometheus rules
  shell: "oc delete {{ item }} -n {{ fuse_namespace }}"
  register: output
  failed_when: output.stderr != '' and 'not found' not in output.stderr
  with_items: "{{ existing_prometheus_rules.stdout_lines }}"

- name: Download fuse binary
  get_url:
    force: yes
    url: https://github.com/jboss-fuse/fuse-clients/releases/download/{{ fuse_online_release_tag }}/syndesis-{{ fuse_online_release_tag }}-linux-64bit.tar.gz
    dest: /tmp/fuse-binary-archive

- set_fact:
    syndesis_install_params: ""

- name: Build syndesis install params
  block:
    - name: check if kubeconfig file exists
      stat:
        path: "{{ kube_config_file }}"
      register: kube_config_exists

    - set_fact:
        syndesis_install_params: "--config {{ kube_config_file }}"
      when: kube_config_exists.stat.exists == True
  when: (kube_config_file is defined) and (kube_config_file|length > 0)

- name: Create directory for extraction
  file:
    path: /tmp/fuse-binary
    state: directory

- name: Extract fuse binary
  unarchive:
    src: /tmp/fuse-binary-archive
    dest: /tmp/fuse-binary

- name: Run operator cluster install
  shell: "/tmp/fuse-binary/syndesis-operator install cluster --namespace {{ fuse_namespace }} {{ syndesis_install_params }}"

- name: Run operator install
  shell: "/tmp/fuse-binary/syndesis-operator install operator  --wait --namespace {{ fuse_namespace }} {{ syndesis_install_params }}"

- template:
    src: syndesis-customresource.yml.j2
    dest: /tmp/syndesis-customresource.yml

- name: Update Syndesis custom resource in {{ fuse_namespace }}
  shell: oc apply -f /tmp/syndesis-customresource.yml -n {{ fuse_namespace }}

- name: Wait for Fuse to finish upgrade
  shell: "oc get syndesis -n {{ fuse_namespace }} | awk '{print $3}' | grep -v VERSION"
  register: fuse_version_cr_status
  until: fuse_version_cr_status.stdout == fuse_online_operator_imagestream_version
  retries: 50
  delay: 10
  
- name: Wait for Fuse rollouts to complete
  import_tasks: wait_for_rollouts.yml
  vars:
    namespace_to_watch: "{{ fuse_namespace }}"
    rollouts_to_watch:
      - dc/broker-amq
      - dc/syndesis-db
      - dc/syndesis-meta
      - dc/syndesis-oauthproxy
      - dc/syndesis-operator
      - dc/syndesis-prometheus
      - dc/syndesis-server
      - dc/syndesis-ui

