---
- include_role:
    name: namespace
    tasks_from: create
  vars:
    name: "{{ backup_namespace }}"

- name: "Create/update secret with s3 credentials"
  shell: >
    oc create secret generic {{ aws_s3_backup_secret_name }} -n {{ backup_namespace }} \
      --from-literal=AWS_ACCESS_KEY_ID={{ backup_s3_aws_access_key }} \
      --from-literal=AWS_SECRET_ACCESS_KEY={{ backup_s3_aws_secret_key }} \
      --from-literal=AWS_S3_BUCKET_NAME={{ backup_s3_aws_bucket }} --dry-run -o yaml | oc apply -f -
  when:
    - backup_s3_aws_access_key != ""
    - backup_s3_aws_secret_key != ""
    - backup_s3_aws_bucket != ""

- name: "Check for aws credentials secret in {{ backup_namespace }} namespace"
  shell: "oc get secret {{ aws_s3_backup_secret_name }} -n {{ backup_namespace }}"

- name: "Create/Update backup cluster role"
  shell: oc apply -f {{ item }}
  with_items: "{{ backup_resources_cluster }}"

- name: "Create {{ backup_namespace }} service account"
  import_tasks: _setup_service_account.yml
  vars:
    binding_name: '{{ backup_namespace }}-backup-binding'
    serviceaccount_namespace: "{{ backup_namespace }}"
