---
- name: Get Launcher dashboard url
  shell: oc get route/launcher -o jsonpath='{.spec.host}' -n {{ launcher_namespace }}
  register: launcher_host_cmd
  when: launcher
- set_fact:
    launcher_dashboard_url: "https://{{ launcher_host_cmd.stdout}}"
  when: launcher

- name: Get Che dashboard url
  shell: oc get route/codeready -o jsonpath='{.spec.host}' -n {{ che_namespace }}
  register: che_host_cmd
  when: che and launcher
- set_fact:
    che_dashboard_url: "https://{{ che_host_cmd.stdout}}"
  when: che and launcher


- name: Get 3scale dashboard url
  shell: oc get route/system-provider-admin -o jsonpath='{.spec.host}' -n {{ threescale_namespace }}
  register: threescale_host_cmd
  when: threescale
- set_fact:
    threescale_dashboard_url: "https://{{ threescale_host_cmd.stdout}}"
  when: threescale

- name: Get apicurito dashboard url
  shell: oc get route/apicurito -o jsonpath='{.spec.host}' -n {{ apicurito_namespace }}
  register: apicurito_host_cmd
- set_fact:
    apicurito_dashboard_url: "https://{{ apicurito_host_cmd.stdout}}"
  when: apicurito

- name: Get shared Fuse dashboard url
  shell: oc get route/syndesis -o jsonpath='{.spec.host}' -n {{ fuse_namespace }}
  register: fuse_host_cmd
  when: fuse
- set_fact:
    fuse_dashboard_url: "https://{{ fuse_host_cmd.stdout}}"

- name: Get SSO route
  shell: oc get route sso -o template --template \{\{.spec.host\}\} -n {{ eval_rhsso_namespace }}
  register: sso_route

# Create managed-service-broker namespace
- include_role:
    name: namespace
    tasks_from: create
  vars:
    name: "{{ msbroker_namespace }}"
    display_name: "Managed Service Broker"
    monitor: true
    is_service: true

- name: Create CRDs
  shell: "oc apply -f {{ item }}"
  with_items: "{{ msbroker_required_crds }}"

- set_fact:
    fuse_online_enabled: "true"
  when: fuse_online

- set_fact:
    fuse_online_enabled: "false"
  when: not fuse_online

- name: Create managed service broker template in {{ msbroker_namespace }}
  shell: "oc process -n {{ msbroker_namespace }} \
  -f {{ msbroker_template }} \
  --param=NAMESPACE={{ msbroker_namespace }} \
  --param=ROUTE_SUFFIX={{ route_suffix }} \
  --param=LAUNCHER_DASHBOARD_URL={{ launcher_dashboard_url }} \
  --param=CHE_DASHBOARD_URL={{ che_dashboard_url }} \
  --param=THREESCALE_DASHBOARD_URL={{ threescale_dashboard_url }} \
  --param=APICURIO_DASHBOARD_URL={{ apicurito_dashboard_url }} \
  --param=SHARED_FUSE_DASHBOARD_URL={{ fuse_dashboard_url }} \
  --param=SSO_URL=https://{{ sso_route.stdout }}/auth/admin/{{ sso_realm }}/console \
  --param=FUSE_OPERATOR_RESOURCES_URL={{ msbroker_fuse_operator_resources_url }} \
  --param=IMAGE_ORG={{ msbroker_image_org }} \
  --param=IMAGE_TAG={{ msbroker_release_tag }} \
  --param MONITORING_KEY={{ monitoring_key }} | oc create -n {{ msbroker_namespace }} -f -"
  register: create_msb_resources_cmd
  failed_when: create_msb_resources_cmd.stderr != '' and 'AlreadyExists' not in create_msb_resources_cmd.stderr
