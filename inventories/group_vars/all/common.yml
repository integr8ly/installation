---
ns_prefix: ''
eval_action: install
eval_namespace: eval
eval_openshift_master_config_path: /etc/origin/master/master-config.yaml
eval_self_signed_certs: False
eval_sso_validate_certs: False
eval_launcher_sso_realm: launcher_realm

eval_apicurito_namespace: "{{ns_prefix | default('')}}apicurito"
eval_che_namespace: "{{ns_prefix | default('')}}codeready"
eval_launcher_namespace: "{{ns_prefix | default('')}}launcher"
eval_rhsso_namespace: "{{ns_prefix | default('')}}sso"
eval_webapp_namespace: "{{ns_prefix | default('')}}webapp"
eval_msbroker_namespace: "{{ns_prefix | default('')}}managed-service-broker"
eval_nexus_namespace: "{{ns_prefix | default('')}}nexus"
eval_managed_fuse_namespace: "{{ns_prefix | default('')}}fuse"
eval_enmasse_namespace: "{{ ns_prefix | default('')}}enmasse"
eval_mobile_security_service_namespace: "{{ ns_prefix | default('')}}mobile-security-service"
eval_ups_namespace: "{{ ns_prefix | default('')}}mobile-unifiedpush"
eval_mdc_namespace: "{{ ns_prefix | default('')}}mobile-developer-console"
eval_middleware_monitoring_namespace: "{{ ns_prefix | default('')}}middleware-monitoring"

eval_user_rhsso_namespace:  "{{ns_prefix | default('')}}user-sso"

eval_seed_users_count: 50
eval_webapp_url_prefix: tutorial-web-app-{{ eval_webapp_namespace }}

eval_threescale_enable_wildcard_route: False
# To use S3 storage instead of filesystem (PVC-based requiring ReadWriteMany)
#eval_threescale_file_upload_storage: s3
#eval_threescale_storage_s3_aws_access_key: <aws_access_key>
#eval_threescale_storage_s3_aws_secret_key: <aws_secret_key>
#eval_threescale_storage_s3_aws_region: <aws_region>
#eval_threescale_storage_s3_aws_bucket: <s3_bucket_name>

# openshift login as some product installs wont work with system:admin
# NOTE: When run_master_tasks is False, this var will also be set to False, with the
#       expectation that `oc` is already logged in as a cluster-admin user
create_cluster_admin: True
# override to set a namespace prefix.

#run_master_tasks: (boolean)
#
# Default is set to True inline in various places.
# No default is set here, as it wouldn't be overwriteable in an inventory file
#
# If True, any tasks that need to happen on the master will be run.
# For example:
# - adding an identity provider to the master-config.yaml
# - adding a cors rule to the master-config.yaml
# - retrieving master url & routing subdomain values from the master-config.yaml
# - adding/removing a htpasswd user (integreatly-admin)
#
# If False, the master host will *not* be accessed at all.
# In this case, the following should be done:
# - run the install.yml playbook,
#   - on a machine that is logged in (oc) with cluster-admin access (*not* system:admin user)
#   - with values set for the following vars
#     - eval_app_host (router subdomain, used for creating some routes & for 3scale)
#     - openshift_master_url (master url for oauth use)
# - after install, add the relevant cors rule to the master-config.yaml based on the webapp route
# - add the cluster SSO identity provider to the master-config.yaml
# - restart the master(s)

# If True, a separate RH-SSO instance will be provisioned to a separate namespace.
# This instance can be used by user applications to provide identity management services.

# As we use include_vars in various places in our roles, this means that default role values can often override variables set in group_vars
# The result of this is that the below variables must be set in this file and removed from their respective role defaults
# For further information regarding variable precedence, see https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable
# NOTE: Any overrides set in environment specific group_vars will take precedence over the ones listed in this file
user_rhsso: True

aws_s3_backup_secret_name: 's3-credentials'

backup_s3_aws_access_key: ""
backup_s3_aws_secret_key: ""
backup_s3_aws_bucket: ""

github_client_id: "set_to_client_id_of_github_oauth_app"
github_client_secret: "set_to_client_secret_of_github_oauth_app"

openshift_login: False
openshift_master_public_url: ''
openshift_username: ''
openshift_password: ''
openshift_token: ''

prerequisites_install: True

# Used to manage images that reference registry.redhat.io which requires authentication
# Pull secret is retrieved from the openshift namespace on a given cluster and can be set in each product namespace to pull images
# Must be overriden for OSD where the pull_secret_name should be set to registry-redhat-io-dockercfg
pull_secret_name: imagestreamsecret

# The name of the image pull secret which will be created in the product namespace
# This will be overriden depending on the product using this role
product_ns_pull_secret_name: imagestreamsecret

rhsso_evals_admin_password: Password1
rhsso_cluster_admin_password: Password1

threescale_file_upload_storage: "{{ eval_threescale_file_upload_storage | default('filesystem') }}"
threescale_storage_s3_aws_access_key: "{{ eval_threescale_storage_s3_aws_access_key | default('null') }}"
threescale_storage_s3_aws_secret_key: "{{ eval_threescale_storage_s3_aws_secret_key | default('null') }}"
threescale_storage_s3_aws_region: "{{ eval_threescale_storage_s3_aws_region | default('null') }}"
threescale_storage_s3_aws_bucket: "{{ eval_threescale_storage_s3_aws_bucket | default('null') }}"

# The default location where kubeconfig will be saved on when the job is running from Tower. For now this is used by the Fuse operator CLI.
# You should ALWAYS check if the file exists on the cluster before using it as it doesn't exist on PDS.
kube_config_file: "/var/lib/awx/.kube/config"
